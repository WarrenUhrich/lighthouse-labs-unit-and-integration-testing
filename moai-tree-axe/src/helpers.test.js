const { pickWinningOption, pickRandomOption, getResult } = require('./helpers');

describe('pickWinningOption function', () => {

    // ðŸ—¿ -> ðŸŒ³
    // ðŸŒ³ -> ðŸª“
    // ðŸª“ -> ðŸ—¿

    it('returns ðŸŒ³ if given ðŸ—¿', () => {
        const result = pickWinningOption('ðŸ—¿');
        expect(result).toBe('ðŸŒ³');
    });

    it('returns ðŸª“ if given ðŸŒ³', () => {
        const result = pickWinningOption('ðŸŒ³');
        expect(result).toBe('ðŸª“');
    });

    it('returns ðŸ—¿ if given ðŸª“', () => {
        const result = pickWinningOption('ðŸª“');
        expect(result).toBe('ðŸ—¿');
    });

    it('throws an error if given invalid input', () => {
        expect(() => {
            pickWinningOption('123');
        }).toThrow('Invalid selection.');
    }); 
});

describe('pickRandomOption function', () => {

    it('returns one of ðŸ—¿,ðŸŒ³,ðŸª“', () => {
        const result = pickRandomOption();
        const options = ['ðŸ—¿','ðŸŒ³','ðŸª“'];
        const wasFound = options.includes(result);
        expect(wasFound).toBe(true);
    });

});

describe('getResult function', () => {

    it('return a win message if the player choice beats the computer', () => {
       const result = getResult('ðŸ—¿', 'ðŸª“');
       expect(result).toBe('YOU WIN!');
    });

    it('return a tie message if the player choice matches the computer', () => {
        const result = getResult('ðŸŒ³', 'ðŸŒ³');
        expect(result).toBe('TIE GAME!');
    });

    it('return a lose message if the player choice loses to the computer', () => {
       const result = getResult('ðŸª“', 'ðŸ—¿');
       expect(result).toBe('YOU LOSE!');
    });

    it('throws an error if given invalid input', () => {
        expect(() => {
            getResult('123', '123');
        }).toThrow('Invalid emojis.');
    }); 
});
